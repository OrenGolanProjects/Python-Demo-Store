==== create tables =====

-- from Classes.processSetup import *

-- obj_db_sqlit3 = database_sqlite3()
-- obj_db_sqlit3.connectDB_sqlite3()
-- obj_db_sqlit3.databaseconnection.execute("select * from customers")

******* create customers ******

-- try:
--     obj_db_sqlit3.databaseconnection.execute("DROP TABLE customers")
--     print("delete table customers success")
-- except sqlite3.Error as e:
--     print(e)

-- obj_db_sqlit3.databaseconnection.execute("""
-- CREATE TABLE `customers` (`IdCustomer` 			INTEGER PRIMARY KEY AUTOINCREMENT ,
--                             `UserName` 			VARCHAR(30) NOT NULL,
--                             `Password` 			VARCHAR(30) NOT NULL,
--                             `Role` 				VARCHAR(10) NOT NULL DEFAULT "customer")

--     """)

******* create product ******
-- try:
--     obj_db_sqlit3.databaseconnection.execute("DROP TABLE product")
--     print("delete table product success")
-- except sqlite3.Error as e:
--     print(e)

-- obj_db_sqlit3.databaseconnection.execute("""
-- CREATE TABLE `product` (`IdProduct` 							INTEGER PRIMARY KEY AUTOINCREMENT ,
--                         `Name` 									VARCHAR(30) NOT NULL,
--                         `Description` 							VARCHAR(150) NOT NULL,
--                         `Price` 									DECIMAL(5, 2) NOT NULL DEFAULT 1)
-- """)

-- try:
--     obj_db_sqlit3.databaseconnection.execute("DROP TABLE ProductToCustomer")
--     print("delete table ProductToCustomer success")
-- except sqlite3.Error as e:
--     print(e)
-- obj_db_sqlit3.databaseconnection.execute("""
-- CREATE TABLE `ProductToCustomer` (`IdProductToCustomer` 						INTEGER PRIMARY KEY AUTOINCREMENT ,
--                                           `IdCustomer`								 		INT NOT NULL,
--                                           `IdProduct` 										INT NOT NULL,
--                                           `Quantity`				 						INT NOT NULL DEFAULT 1,
--                                           FOREIGN KEY(`IdCustomer`) REFERENCES customers(`IdCustomer`) ,
--                                           FOREIGN KEY(`IdProduct`) REFERENCES product(`IdProduct`)
--                                   )
-- """)


